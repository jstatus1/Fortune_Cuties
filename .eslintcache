[{"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\index.js":"1","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\App.js":"2","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\QuoteBox.js":"3","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\Cookie Types\\cookieType.js":"4","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\PlainCookie.js":"5","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\components\\Carousel-Display.js":"6","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\pages\\Home.js":"7"},{"size":220,"mtime":1608623146316,"results":"8","hashOfConfig":"9"},{"size":184,"mtime":1608704203547,"results":"10","hashOfConfig":"9"},{"size":1468,"mtime":1608627146173,"results":"11","hashOfConfig":"9"},{"size":3279,"mtime":1608703202493,"results":"12","hashOfConfig":"9"},{"size":1967,"mtime":1608703834722,"results":"13","hashOfConfig":"9"},{"size":2336,"mtime":1608703862521,"results":"14","hashOfConfig":"9"},{"size":923,"mtime":1608704469193,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"17s29f4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\index.js",[],["32","33"],"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\App.js",[],"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\QuoteBox.js",[],"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\Cookie Types\\cookieType.js",[],"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\PlainCookie.js",["34","35"],"import react from 'react'\r\n\r\n//QuoteBox\r\nimport QuoteBox from './QuoteBox'\r\n\r\n\r\nclass PlainCookie extends react.Component\r\n{\r\n    biteSound = new Audio(this.props.CookieType.Sound.default)\r\n    \r\n    state = {\r\n        counter: 0,\r\n        src: this.props.CookieType.FullImage.default\r\n    }\r\n\r\n    eatingCookie = () =>\r\n    {\r\n        this.biteSound.loop = false;\r\n        this.biteSound.play();\r\n        this.setState({counter:this.state.counter+1})\r\n        switch(this.state.counter)\r\n            {\r\n                case 2:\r\n                    this.setState({src:this.props.CookieType.TwoThirds.default})\r\n                    break;\r\n                case 4: \r\n                    this.setState({src:this.props.CookieType.Half.default})\r\n                    break;\r\n                case 6: \r\n                    this.setState({src:this.props.CookieType.OneThird.default})\r\n                    break;\r\n                case 8:\r\n                    this.setState({src:\"\"})\r\n                    break;\r\n            }\r\n    }\r\n\r\n    refreshPage=()=>{ \r\n        window.location.reload(); \r\n    }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className = \"cookieMan\">\r\n                {\r\n                    (this.state.src === \"\")?\r\n                    <div className = \"Quote_Box\">\r\n                        <h1>Fortune:</h1>\r\n                        <QuoteBox/>\r\n                        <button type=\"button\" onClick={ this.refreshPage }> Another Cutie? </button> \r\n                    </div>:\r\n                    <>\r\n                    <h1>{this.props.CookieType.Name}</h1>\r\n                       <button className=\"cookieButton\" onClick={this.eatingCookie}>\r\n                            <img src={this.state.src} alt=\"Fortune Cookie Image Here\" />\r\n                        </button>\r\n                    <h1>Eat (Click Me) Me!</h1>\r\n                    </> \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default PlainCookie","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\components\\Carousel-Display.js",["36","37","38"],"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\pages\\Home.js",["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":21,"column":9,"nodeType":"47","messageId":"48","endLine":35,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":58,"column":29,"nodeType":"51","endLine":58,"endColumn":89},{"ruleId":"52","severity":1,"message":"53","line":10,"column":59,"nodeType":"54","messageId":"55","endLine":10,"endColumn":61},{"ruleId":"56","severity":1,"message":"57","line":23,"column":37,"nodeType":"58","messageId":"59","endLine":23,"endColumn":39},{"ruleId":"56","severity":1,"message":"57","line":28,"column":38,"nodeType":"58","messageId":"59","endLine":28,"endColumn":40},{"ruleId":"60","severity":1,"message":"61","line":14,"column":25,"nodeType":"51","endLine":14,"endColumn":58},{"ruleId":"60","severity":1,"message":"61","line":19,"column":25,"nodeType":"51","endLine":19,"endColumn":58},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]