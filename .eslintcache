[{"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\index.js":"1","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\App.js":"2","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\QuoteBox.js":"3","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\Carousel-Display.js":"4","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\Cookie Types\\cookieType.js":"5","C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\PlainCookie.js":"6"},{"size":220,"mtime":1608623146316,"results":"7","hashOfConfig":"8"},{"size":605,"mtime":1608697456878,"results":"9","hashOfConfig":"8"},{"size":1468,"mtime":1608627146173,"results":"10","hashOfConfig":"8"},{"size":2509,"mtime":1608702209383,"results":"11","hashOfConfig":"8"},{"size":3093,"mtime":1608700323001,"results":"12","hashOfConfig":"8"},{"size":2307,"mtime":1608678193347,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"17s29f4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\index.js",[],["28","29"],"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\App.js",["30"],"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\QuoteBox.js",[],"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\Carousel-Display.js",["31","32","33"],"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\Cookie Types\\cookieType.js",[],"C:\\Users\\Johnson\\Documents\\GitHub\\Website\\React\\fortunecookie\\src\\PlainCookie.js",["34","35","36","37"],"import react from 'react'\r\n\r\n//Cookie Images\r\nimport {cookieType} from './Cookie Types/cookieType'\r\nimport FullCookie from './Cookie Types/Images/FortuneCookie/FullCookie.png'\r\nimport Two_ThirdsCookie from './Cookie Types/Images/FortuneCookie/two_thirds.png'\r\nimport HalfCookie from './Cookie Types/Images/FortuneCookie/half.png'\r\nimport One_ThirdCookie from './Cookie Types/Images/FortuneCookie/one_third.png'\r\nimport biteMP3 from './Cookie Types/Sound/Bite.mp3'\r\n\r\n//QuoteBox\r\nimport QuoteBox from './QuoteBox'\r\n\r\n\r\nclass PlainCookie extends react.Component\r\n{\r\n    biteSound = new Audio(biteMP3)\r\n    \r\n    state = {\r\n        counter: 0,\r\n        src: this.props.CookieType.FullImage.default\r\n    }\r\n\r\n    eatingCookie = () =>\r\n    {\r\n        this.biteSound.loop = false;\r\n        this.biteSound.play();\r\n        this.setState({counter:this.state.counter+1})\r\n        switch(this.state.counter)\r\n            {\r\n                case 2:\r\n                    this.setState({src:Two_ThirdsCookie})\r\n                    break;\r\n                case 4: \r\n                    this.setState({src:HalfCookie})\r\n                    break;\r\n                case 6: \r\n                    this.setState({src:One_ThirdCookie})\r\n                    break;\r\n                case 8:\r\n                    this.setState({src:\"\"})\r\n                    break;\r\n            }\r\n    }\r\n\r\n    refreshPage=()=>{ \r\n        window.location.reload(); \r\n    }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className = \"cookieMan\">\r\n                {\r\n                    (this.state.src === \"\")?\r\n                    <div className = \"Quote_Box\">\r\n                        <h1>Fortune:</h1>\r\n                        <QuoteBox/>\r\n                        <button type=\"button\" onClick={ this.refreshPage }> Another Cutie? </button> \r\n                    </div>:\r\n                    <>\r\n                    <h1>{this.props.CookieType.Name}</h1>\r\n                       <button className=\"cookieButton\" onClick={this.eatingCookie}>\r\n                            <img src={this.state.src} alt=\"Fortune Cookie Image Here\" />\r\n                        </button>\r\n                    <h1>Eat (Click Me) Me!</h1>\r\n                    </> \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default PlainCookie",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":15,"column":13,"nodeType":"44","endLine":15,"endColumn":46},{"ruleId":"45","severity":1,"message":"46","line":1,"column":15,"nodeType":"47","messageId":"48","endLine":1,"endColumn":23},{"ruleId":"49","severity":1,"message":"50","line":24,"column":73,"nodeType":"51","messageId":"52","endLine":24,"endColumn":75},{"ruleId":"53","severity":1,"message":"54","line":25,"column":22,"nodeType":"55","messageId":"56","endLine":25,"endColumn":24},{"ruleId":"45","severity":1,"message":"57","line":4,"column":9,"nodeType":"47","messageId":"48","endLine":4,"endColumn":19},{"ruleId":"45","severity":1,"message":"58","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":29,"column":9,"nodeType":"61","messageId":"62","endLine":43,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":66,"column":29,"nodeType":"44","endLine":66,"endColumn":89},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'cookieType' is defined but never used.","'FullCookie' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]